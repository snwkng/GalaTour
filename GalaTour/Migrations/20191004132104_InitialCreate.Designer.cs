// <auto-generated />
using System;
using GalaTour.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GalaTour.Migrations
{
    [DbContext(typeof(ExcursionContext))]
    [Migration("20191004132104_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GalaTour.Models.ExCity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.HasKey("ID");

                    b.ToTable("ExCities");
                });

            modelBuilder.Entity("GalaTour.Models.Excursion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<int>("ExCityID");

                    b.Property<int>("ExDateID");

                    b.Property<int>("ExDurationID");

                    b.Property<int>("ExHotelID");

                    b.Property<int>("ExImageID");

                    b.Property<int>("ExPriceID");

                    b.Property<string>("Name");

                    b.Property<int>("ThePriceIncludeID");

                    b.HasKey("ID");

                    b.HasIndex("ExCityID");

                    b.HasIndex("ExDateID");

                    b.HasIndex("ExDurationID");

                    b.HasIndex("ExHotelID");

                    b.HasIndex("ExImageID");

                    b.HasIndex("ExPriceID");

                    b.HasIndex("ThePriceIncludeID");

                    b.ToTable("Excursions");
                });

            modelBuilder.Entity("GalaTour.Models.ExDate", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.HasKey("ID");

                    b.ToTable("ExDates");
                });

            modelBuilder.Entity("GalaTour.Models.ExDuration", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Duration");

                    b.HasKey("ID");

                    b.ToTable("ExDurations");
                });

            modelBuilder.Entity("GalaTour.Models.ExHotel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HotelLink");

                    b.Property<string>("HotelName");

                    b.HasKey("ID");

                    b.ToTable("ExHotels");
                });

            modelBuilder.Entity("GalaTour.Models.ExImage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageURL");

                    b.HasKey("ID");

                    b.ToTable("ExImages");
                });

            modelBuilder.Entity("GalaTour.Models.ExPrice", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Price");

                    b.HasKey("ID");

                    b.ToTable("ExPrices");
                });

            modelBuilder.Entity("GalaTour.Models.ThePriceInclude", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PriceInclude");

                    b.HasKey("ID");

                    b.ToTable("ThePriceIncludes");
                });

            modelBuilder.Entity("GalaTour.Models.Excursion", b =>
                {
                    b.HasOne("GalaTour.Models.ExCity", "ExCity")
                        .WithMany("Excursions")
                        .HasForeignKey("ExCityID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GalaTour.Models.ExDate", "ExDate")
                        .WithMany("Excursions")
                        .HasForeignKey("ExDateID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GalaTour.Models.ExDuration", "ExDuration")
                        .WithMany("Excursions")
                        .HasForeignKey("ExDurationID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GalaTour.Models.ExHotel", "ExHotel")
                        .WithMany("Excursions")
                        .HasForeignKey("ExHotelID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GalaTour.Models.ExImage", "ExImage")
                        .WithMany("Excursions")
                        .HasForeignKey("ExImageID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GalaTour.Models.ExPrice", "ExPrice")
                        .WithMany("Excursions")
                        .HasForeignKey("ExPriceID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GalaTour.Models.ThePriceInclude", "ThePriceInclude")
                        .WithMany("Excursions")
                        .HasForeignKey("ThePriceIncludeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
